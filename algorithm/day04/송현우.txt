1. snail
def IsSafe(y, x):
    return y >= 0 and y < 5 and x >= 0 and x < 5 and _Arr[y][x] == 0


N = 5
for n in range(N):
    Arr =list(map(int, input().split()))

_Arr=[[0]*5 for _ in range(5)]

dy = [0,1,0,-1]
dx = [1,0,-1,0]
val = 1
y = 0
x = 0
dir = 0
for n in range(25):
    _Arr[y][x] = val
    if not IsSafe(y+dy[dir], x+dx[dir]):
        dir += 1
        dir %= 4
    y += dy[dir]
    x += dx[dir]
    val += 1

print(_Arr)


2.색칠

def chill(x1, y1, x2, y2, c):
    for dx in range(x1,x2+1):
        for dy in range(y1, y2+1):
            if bin[dx][dy]== 0:
                bin[dx][dy] = c
            elif bin[dx][dy]== 1:
                if c == 2:
                    bin[dx][dy] = 3

            elif bin[dx][dy]== 2:
                if c == 1:
                    bin[dx][dy] = 3
    return bin


T = int(input())

for t in range(1, T+1):
    N = int(input())
    colors = []
    bin = [[0]*10 for i in range(10)]
    result = 0
    count = 0
    for n in range(N):
        colors.append(list(map(int, input().split())))

    len_c = len(colors)
    for c in range(len_c):
        result = chill(colors[c][0], colors[c][1], colors[c][2], colors[c][3], colors[c][4])
    for dx in range(10):
        for dy in range(10):
            if bin[dx][dy] == 3:
                count += 1
    print(f'#{t} {count}')

3.부분집합
T = int(input())
Arr=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
n = len(Arr)
# n=5
# i  =  0 00000 ~ 0 11111
# j =   00000
#       00001
#       00010
#       00100
#       01000
#       10000
for t in range(1,T+1):
    N, K = map(int,input().split())
    count=0
    for i in range(1<<n):
        bin = []
        for j in range(n):
            if i & (1<<j):
                bin.append(Arr[j])

        if sum(bin) == K:
           if len(bin) == N:
                 count += 1

    print(f'#{t} {count}')

4.이진검색
def bin_search(P, target):
    start = 1
    end = P
    count = 1
    mid = (start + end) // 2
    while abs(mid -target) >= 1:
        mid = (start + end) // 2
        if mid < target:
            start = mid
            count +=1
        else:
            end = mid
            count += 1

    if mid == target :
        return count
    else:
        return 0

def comp(A,B):
    if A > B:
        return 'B'
    elif A < B:
        return 'A'
    else:
        return 0

T = int(input())

for t in range(1, T+1):
    book = list(map(int, input().split()))
    A = bin_search(book[0],book[1])
    B = bin_search(book[0],book[2])
    result = comp(A,B)
    print(f'#{t} {result}')

5.특별정렬
T = int(input())
for t in range(1, T+1):
    N = int(input())
    l = list(map(int, input().split()))
    new_l = sorted(l)
    bin = []
    a = len(l) - 1
    b = 0
    count = 10
    for i in range(len(l)):
        while count > 0:
            if a > b:
                bin.append(new_l[a])
                a -=1
                bin.append(new_l[b])
                b +=1
                count -= 2
    k = ' '.join(map(str, bin))
    print(f"#{t} {k}")
6.금속막대
def find_1(list):
    index = 0
    bin=[]
    for i in range(0, len_s, 2):
        count = 0
        for j in range(1, len_s, 2):
            if stick[i] == stick[j]:
                count += 1
                break
        if count == 0:
            index = i
    bin.append(stick[index])
    bin.append(stick[index+1])
    return bin


T = int(input())
for t in range(1, T+1):
    N = int(input())
    stick = list(map(int, input().split()))
    len_s =len(stick)
    bin=find_1(stick)
    life = N-1
    while life > 0:
        for i in range(0, len_s, 2):
            if bin[-1] == stick[i]:
                bin.append(stick[i])
                bin.append(stick[i+1])

        life -= 1
    print(f'#{t} {" ".join(map(str, bin))}')